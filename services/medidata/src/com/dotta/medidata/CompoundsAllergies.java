/*Copyright (c) 2018-2019 medidesign.co.uk All Rights Reserved.
 This software is the confidential and proprietary information of medidesign.co.uk You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with medidesign.co.uk*/
package com.dotta.medidata;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.ForeignKey;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

/**
 * CompoundsAllergies generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`compounds_allergies`")
public class CompoundsAllergies implements Serializable {

    private Integer id;
    private Integer compoundId;
    private Integer allergyId;
    private Integer ranking;
    private String note;
    private Compounds compounds;
    private Allergies allergies;

    @Id
    @Column(name = "`id`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`compound_id`", nullable = true, scale = 0, precision = 10)
    public Integer getCompoundId() {
        return this.compoundId;
    }

    public void setCompoundId(Integer compoundId) {
        this.compoundId = compoundId;
    }

    @Column(name = "`allergy_id`", nullable = true, scale = 0, precision = 10)
    public Integer getAllergyId() {
        return this.allergyId;
    }

    public void setAllergyId(Integer allergyId) {
        this.allergyId = allergyId;
    }

    @Column(name = "`ranking`", nullable = true, scale = 0, precision = 10)
    public Integer getRanking() {
        return this.ranking;
    }

    public void setRanking(Integer ranking) {
        this.ranking = ranking;
    }

    @Column(name = "`note`", nullable = true, length = 65535)
    public String getNote() {
        return this.note;
    }

    public void setNote(String note) {
        this.note = note;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`compound_id`", referencedColumnName = "`id`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`fk_compounds_allergies_compounds1`"))
    @Fetch(FetchMode.JOIN)
    public Compounds getCompounds() {
        return this.compounds;
    }

    public void setCompounds(Compounds compounds) {
        if(compounds != null) {
            this.compoundId = compounds.getId();
        }

        this.compounds = compounds;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`allergy_id`", referencedColumnName = "`id`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`fk_compounds_allergies_allergies1`"))
    @Fetch(FetchMode.JOIN)
    public Allergies getAllergies() {
        return this.allergies;
    }

    public void setAllergies(Allergies allergies) {
        if(allergies != null) {
            this.allergyId = allergies.getId();
        }

        this.allergies = allergies;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof CompoundsAllergies)) return false;
        final CompoundsAllergies compoundsAllergies = (CompoundsAllergies) o;
        return Objects.equals(getId(), compoundsAllergies.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}