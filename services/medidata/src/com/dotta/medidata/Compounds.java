/*Copyright (c) 2018-2019 medidesign.co.uk All Rights Reserved.
 This software is the confidential and proprietary information of medidesign.co.uk You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with medidesign.co.uk*/
package com.dotta.medidata;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.List;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.annotations.Cascade;
import org.hibernate.annotations.CascadeType;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;

/**
 * Compounds generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`compounds`")
public class Compounds implements Serializable {

    private Integer id;
    private String compoundName;
    private Integer exampleOnly;
    private Integer searchOnly;
    private String note;
    private List<CompoundsAllergies> compoundsAllergieses;

    @Id
    @Column(name = "`id`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`compound_name`", nullable = false, length = 65535)
    public String getCompoundName() {
        return this.compoundName;
    }

    public void setCompoundName(String compoundName) {
        this.compoundName = compoundName;
    }

    @Column(name = "`example_only`", nullable = true, scale = 0, precision = 10)
    public Integer getExampleOnly() {
        return this.exampleOnly;
    }

    public void setExampleOnly(Integer exampleOnly) {
        this.exampleOnly = exampleOnly;
    }

    @Column(name = "`search_only`", nullable = true, scale = 0, precision = 10)
    public Integer getSearchOnly() {
        return this.searchOnly;
    }

    public void setSearchOnly(Integer searchOnly) {
        this.searchOnly = searchOnly;
    }

    @Column(name = "`note`", nullable = true, length = 65535)
    public String getNote() {
        return this.note;
    }

    public void setNote(String note) {
        this.note = note;
    }

    @JsonInclude(Include.NON_EMPTY)
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "compounds")
    @Cascade({CascadeType.SAVE_UPDATE})
    public List<CompoundsAllergies> getCompoundsAllergieses() {
        return this.compoundsAllergieses;
    }

    public void setCompoundsAllergieses(List<CompoundsAllergies> compoundsAllergieses) {
        this.compoundsAllergieses = compoundsAllergieses;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Compounds)) return false;
        final Compounds compounds = (Compounds) o;
        return Objects.equals(getId(), compounds.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}