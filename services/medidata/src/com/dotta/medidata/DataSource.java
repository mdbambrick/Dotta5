/*Copyright (c) 2018-2019 medidesign.co.uk All Rights Reserved.
 This software is the confidential and proprietary information of medidesign.co.uk You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with medidesign.co.uk*/
package com.dotta.medidata;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.List;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.annotations.Cascade;
import org.hibernate.annotations.CascadeType;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;

/**
 * DataSource generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`data_source`")
public class DataSource implements Serializable {

    private Integer id;
    private String dataSource;
    private List<SurveyAndTestData> surveyAndTestDatas;

    @Id
    @Column(name = "`id`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`data_source`", nullable = true, length = 65535)
    public String getDataSource() {
        return this.dataSource;
    }

    public void setDataSource(String dataSource) {
        this.dataSource = dataSource;
    }

    @JsonInclude(Include.NON_EMPTY)
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "dataSourceByDataSource")
    @Cascade({CascadeType.SAVE_UPDATE})
    public List<SurveyAndTestData> getSurveyAndTestDatas() {
        return this.surveyAndTestDatas;
    }

    public void setSurveyAndTestDatas(List<SurveyAndTestData> surveyAndTestDatas) {
        this.surveyAndTestDatas = surveyAndTestDatas;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof DataSource)) return false;
        final DataSource dataSourceInstance = (DataSource) o;
        return Objects.equals(getId(), dataSourceInstance.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}